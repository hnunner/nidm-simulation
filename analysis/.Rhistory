p <- p + geom_point(aes(y = net.clustering.av), alpha = 0.5, colour = "blue")
p <- p + geom_point(aes(y = net.pathlength.av), alpha = 0.5, colour = "red")
p <- p + scale_y_continuous(sec.axis = sec_axis(~.*1, name = "Average path length"))
p <- p + scale_colour_manual(values = c("blue", "red"))
p <- p + labs(y = "Average clustering",
x = "Benefit of triadic closure",
colour = "Parameter")
p <- p + theme(legend.position = c(0.8, 0.9))
p
p <- ggplot(ssData, aes(x = bb.b2))
p <- p + geom_point(aes(y = net.clustering.av), alpha = 0.5, colour = "blue")
p <- p + ylim(0, 1)
p <- p + geom_point(aes(y = net.pathlength.av), alpha = 0.5, colour = "red")
p <- p + scale_y_continuous(sec.axis = sec_axis(~.*1, name = "Average path length"))
p <- p + scale_colour_manual(values = c("blue", "red"))
p <- p + labs(y = "Average clustering",
x = "Benefit of triadic closure",
colour = "Parameter")
p <- p + theme(legend.position = c(0.8, 0.9))
p
p <- ggplot(ssData, aes(x = bb.b2))
p <- p + geom_point(aes(y = net.clustering.av), alpha = 0.5, colour = "blue")
p <- p + geom_point(aes(y = net.pathlength.av), alpha = 0.5, colour = "red")
p <- p + scale_y_continuous(sec.axis = sec_axis(~.*4, name = "Average path length"))
p <- p + scale_colour_manual(values = c("blue", "red"))
p <- p + labs(y = "Average clustering",
x = "Benefit of triadic closure",
colour = "Parameter")
p <- p + theme(legend.position = c(0.8, 0.9))
p
p <- ggplot(ssData, aes(x = bb.b2))
p <- p + geom_point(aes(y = net.clustering.av), alpha = 0.5, colour = "blue")
p <- p + geom_point(aes(y = net.pathlength.av), alpha = 0.5, colour = "red")
p <- p + scale_y_continuous(sec.axis = sec_axis(~.*1, name = "Average path length"))
p <- p + scale_colour_manual(values = c("blue", "red"))
p <- p + labs(y = "Average clustering",
x = "Benefit of triadic closure",
colour = "Parameter")
p <- p + theme(legend.position = c(0.8, 0.9))
p
p <- ggplot(ssData, aes(x = bb.b2))
p <- p + geom_point(aes(y = net.clustering.av), alpha = bb.c3, colour = "blue")
p <- ggplot(ssData, aes(x = bb.b2))
p <- p + geom_point(aes(y = net.clustering.av), alpha = ssData$bb.c3, colour = "blue")
p <- p + geom_point(aes(y = net.pathlength.av), alpha = ssData$bb.c3, colour = "red")
p <- p + scale_y_continuous(sec.axis = sec_axis(~.*1, name = "Average path length"))
p <- p + scale_colour_manual(values = c("blue", "red"))
p <- p + labs(y = "Average clustering",
x = "Benefit of triadic closure",
colour = "Parameter")
p <- p + theme(legend.position = c(0.8, 0.9))
p
p1 <- ggplot(ssData, aes(x = bb.b2))
p1 <- p1 + geom_point(aes(y = net.clustering.av), alpha = ssData$bb.c3, colour = "blue")
p1 <- p1 + labs(y = "Average clustering", x = "Benefit of triadic closure")
p1
p2 <- ggplot(ssData, aes(x = bb.b2))
p2 <- p2 + geom_point(aes(y = net.pathlength.av), alpha = ssData$bb.c3, colour = "red")
p2 <- p2 + labs(y = "Average path length", x = "Benefit of triadic closure")
p2
grid.arrange(plot1, plot2, ncol=2)
sourceLibs(c("ggplot2",     # plots
"gridExtra",   # side-by-side plots
"QuantPsyc",   # 'meanCenter' function
"lme4",        # regression analyses
"sjstats",     # "icc" function
"texreg"       # html export
))
grid.arrange(plot1, plot2, ncol=2)
grid.arrange(pt1, p2, ncol=2)
grid.arrange(p1, p2, ncol=2)
grid.arrange(p1, p2, p1, p2 ncol=2)
grid.arrange(p1, p2, p1, p2, ncol=2)
p1 <- ggplot(ssData, aes(x = bb.b2))
p1 <- p1 + geom_point(aes(y = net.clustering.av), size = ssData$bb.c3, colour = "blue")
p1 <- p1 + labs(y = "Average clustering", x = "Benefit of triadic closure")
p2 <- ggplot(ssData, aes(x = bb.b2))
p2 <- p2 + geom_point(aes(y = net.pathlength.av), alpha = ssData$bb.c3, colour = "red")
p2 <- p2 + labs(y = "Average path length", x = "Benefit of triadic closure")
grid.arrange(p1, p2, ncol=2)
p1 <- ggplot(ssData, aes(x = bb.b2))
p1 <- p1 + geom_point(aes(y = net.clustering.av), size = ssData$bb.c3*1.5, colour = "blue")
p1 <- p1 + labs(y = "Average clustering", x = "Benefit of triadic closure")
p2 <- ggplot(ssData, aes(x = bb.b2))
p2 <- p2 + geom_point(aes(y = net.pathlength.av), alpha = ssData$bb.c3, colour = "red")
p2 <- p2 + labs(y = "Average path length", x = "Benefit of triadic closure")
grid.arrange(p1, p2, ncol=2)
p1 <- ggplot(ssData, aes(x = bb.b2))
p1 <- p1 + geom_point(aes(y = net.clustering.av), size = ssData$bb.c3*1.5, alpha = 0.5, colour = "blue")
p1 <- p1 + labs(y = "Average clustering", x = "Benefit of triadic closure")
p2 <- ggplot(ssData, aes(x = bb.b2))
p2 <- p2 + geom_point(aes(y = net.pathlength.av), alpha = ssData$bb.c3, colour = "red")
p2 <- p2 + labs(y = "Average path length", x = "Benefit of triadic closure")
grid.arrange(p1, p2, ncol=2)
p1 <- ggplot(ssData, aes(x = bb.b2))
p1 <- p1 + geom_point(aes(y = net.clustering.av),
size = ssData$bb.c3*2,
alpha = 0.5,
colour = "blue")
p1 <- p1 + labs(y = "Average clustering", x = "Benefit of triadic closure")
p2 <- ggplot(ssData, aes(x = bb.b2))
p2 <- p2 + geom_point(aes(y = net.pathlength.av),
size = ssData$bb.c3*2,
alpha = 0.5,
colour = "red")
p2 <- p2 + labs(y = "Average path length", x = "Benefit of triadic closure")
grid.arrange(p1, p2, ncol=2)
p1 <- ggplot(ssData, aes(x = bb.b2))
p1 <- p1 + geom_point(aes(y = net.clustering.av),
size = ssData$bb.c3*2,
alpha = 0.5,
colour = "blue")
p1 <- p1 + geom_smooth()
p1 <- p1 + labs(y = "Average clustering", x = "Benefit of triadic closure")
p2 <- ggplot(ssData, aes(x = bb.b2))
p2 <- p2 + geom_point(aes(y = net.pathlength.av),
size = ssData$bb.c3*2,
alpha = 0.5,
colour = "red")
p2 <- p2 + labs(y = "Average path length", x = "Benefit of triadic closure")
grid.arrange(p1, p2, ncol=2)
p1 <- ggplot(ssData, aes(x = bb.b2))
p1 <- p1 + geom_point(aes(y = net.clustering.av),
size = ssData$bb.c3*2,
alpha = 0.5,
colour = "blue")
p1 <- p1 + geom_smooth(method = lm)
p1 <- p1 + labs(y = "Average clustering", x = "Benefit of triadic closure")
p2 <- ggplot(ssData, aes(x = bb.b2))
p2 <- p2 + geom_point(aes(y = net.pathlength.av),
size = ssData$bb.c3*2,
alpha = 0.5,
colour = "red")
p2 <- p2 + labs(y = "Average path length", x = "Benefit of triadic closure")
grid.arrange(p1, p2, ncol=2)
p1 <- ggplot(ssData, aes(x = bb.b2))
p1 <- p1 + geom_point(aes(y = net.clustering.av),
size = ssData$bb.c3*2,
alpha = 0.5,
colour = "blue")
p1 <- p1 + geom_smooth(aes(y = net.clustering.av))
p1 <- p1 + labs(y = "Average clustering", x = "Benefit of triadic closure")
p2 <- ggplot(ssData, aes(x = bb.b2))
p2 <- p2 + geom_point(aes(y = net.pathlength.av),
size = ssData$bb.c3*2,
alpha = 0.5,
colour = "red")
p2 <- p2 + labs(y = "Average path length", x = "Benefit of triadic closure")
grid.arrange(p1, p2, ncol=2)
p1 <- ggplot(ssData, aes(x = bb.b2))
p1 <- p1 + geom_point(aes(y = net.clustering.av),
size = ssData$bb.c3*2,
alpha = 0.5,
colour = "blue")
p1 <- p1 + geom_smooth(method=lm, aes(y = net.clustering.av))
p1 <- p1 + labs(y = "Average clustering", x = "Benefit of triadic closure")
p2 <- ggplot(ssData, aes(x = bb.b2))
p2 <- p2 + geom_point(aes(y = net.pathlength.av),
size = ssData$bb.c3*2,
alpha = 0.5,
colour = "red")
p2 <- p2 + labs(y = "Average path length", x = "Benefit of triadic closure")
grid.arrange(p1, p2, ncol=2)
p2 <- ggplot(ssData, aes(x = bb.b2))
p2 <- p2 + geom_point(aes(y = net.pathlength.av),
size = ssData$bb.c3*2,
alpha = 0.5,
colour = "red")
p2 <- p2 + geom_smooth(method=lm, aes(y = net.pathlength.av))
p2 <- p2 + labs(y = "Average path length", x = "Benefit of triadic closure")
grid.arrange(p1, p2, ncol=2)
p2 <- p2 + geom_smooth(method=lm, aes(y = net.pathlength.av), color = "red")
p2 <- p2 + labs(y = "Average path length", x = "Benefit of triadic closure")
grid.arrange(p1, p2, ncol=2)
p2 <- ggplot(ssData, aes(x = bb.b2))
p2 <- p2 + geom_point(aes(y = net.pathlength.av),
size = ssData$bb.c3*2,
alpha = 0.5,
colour = "red")
p2 <- p2 + geom_smooth(method=lm, aes(y = net.pathlength.av), color = "red")
p2 <- p2 + labs(y = "Average path length", x = "Benefit of triadic closure")
grid.arrange(p1, p2, ncol=2)
p1 <- ggplot(ssData, aes(x = bb.b2))
p1 <- p1 + geom_point(aes(y = net.clustering.av),
size = ssData$bb.c3*2,
alpha = 0.5,
colour = "blue")
p1 <- p1 + geom_smooth(aes(y = net.clustering.av))
p1 <- p1 + labs(y = "Average clustering", x = "Benefit of triadic closure")
p2 <- ggplot(ssData, aes(x = bb.b2))
p2 <- p2 + geom_point(aes(y = net.pathlength.av),
size = ssData$bb.c3*2,
alpha = 0.5,
colour = "red")
p2 <- p2 + geom_smooth(aes(y = net.pathlength.av), color = "red")
p2 <- p2 + labs(y = "Average path length", x = "Benefit of triadic closure")
grid.arrange(p1, p2, ncol=2)
p3 <- ggplot(ssData, aes(x = bb.c3))
p3 <- p3 + geom_point(aes(y = net.clustering.av),
size = ssData$bb.b2*2,
alpha = 0.5,
colour = "blue")
p3 <- p3 + geom_smooth(aes(y = net.clustering.av))
p3 <- p3 + labs(y = "Average clustering", x = "Costs for triadic closure")
p4 <- ggplot(ssData, aes(x = bb.c3))
p4 <- p4 + geom_point(aes(y = net.pathlength.av),
size = ssData$bb.b2*2,
alpha = 0.5,
colour = "red")
p4 <- p4 + geom_smooth(aes(y = net.pathlength.av), color = "red")
p4 <- p4 + labs(y = "Average path length", x = "Costs for triadic closure")
grid.arrange(p1, p2, ncol=2)
grid.arrange(p1, p2, p3, p4, ncol=2)
p <- grid.arrange(p1, p2, p3, p4, ncol=2)
p
arrangeGrob(p1, p2, p3, p4, ncol=2)
p <- arrangeGrob(p1, p2, p3, p4, ncol=2)
p
source('~/git/uu/nidm/simulation/analysis/small-worlds.R')
exportPlots()
source('~/git/uu/nidm/simulation/analysis/small-worlds.R')
exportPlots()
source('~/git/uu/nidm/simulation/analysis/small-worlds.R')
exportPlots()
source('~/git/uu/nidm/simulation/analysis/small-worlds.R')
exportPlots()
ssData = loadSimulationSummaryData()
### LINEAR REGRESSIONS (stability)  ###
# null-model
reg00    <- lm(stable ~
b1 + b2 + c1 + c2 + c3 + N + iota + phi,
data = ssData,
REML = FALSE)
# MAIN EFFECTS
# independent variables
b1                                 <- meanCenter(ssData$bb.b1)
b2                                 <- meanCenter(ssData$bb.b2)
c1                                 <- meanCenter(ssData$bb.c1)
c2                                 <- meanCenter(ssData$bb.c2)
c3                                 <- meanCenter(ssData$bb.c3)
N                                  <- meanCenter(ssData$bb.N)
iota                               <- meanCenter(ssData$bb.iota)
phi                                <- meanCenter(ssData$bb.phi)
# dependent variables
stable                             <- meanCenter(ssData$net.stable)
av.degree                          <- meanCenter(ssData$net.degree.av)
av.clustering                      <- meanCenter(ssData$net.clustering.av)
av.pathlength                      <- meanCenter(ssData$net.pathlength.av)
### LINEAR REGRESSIONS (stability)  ###
# null-model
reg00    <- lm(stable ~
b1 + b2 + c1 + c2 + c3 + N + iota + phi,
data = ssData,
REML = FALSE)
### LINEAR REGRESSIONS (stability)  ###
# null-model
reg00    <- lm(stable ~
b1 + b2 + c1 + c2 + c3 + N + iota + phi,
data = ssData)
print(reg00)
summary(reg00)
### LINEAR REGRESSIONS ###
# stability
regStable    <- lm(stable ~ b1 + b2 + c1 + c2 + c3 + N + iota + phi, data = ssData)
exportModels(list(regStable), "reg-stability")
source('~/git/uu/nidm/simulation/analysis/small-worlds.R')
source('~/git/uu/nidm/simulation/analysis/small-worlds.R')
source('~/git/uu/nidm/simulation/analysis/small-worlds.R')
source('~/git/uu/nidm/simulation/analysis/small-worlds.R')
exportRegressionModelsComplete()
source('~/git/uu/nidm/simulation/analysis/small-worlds.R')
source('~/git/uu/nidm/simulation/analysis/small-worlds.R')
exportRegressionModelsComplete()
dat <- data.frame(x = rnorm(100), y = rnorm(100))
ggplot(dat, aes(x=x,y=y)) +
geom_point() +
labs(y=expression(Blah[1]))
ggplot(dat, aes(x=x,y=y)) +
geom_point() +
labs(y=expression(Benefit of d[1]))
ggplot(dat, aes(x=x,y=y)) +
geom_point() +
labs(y=expression("Benefit of "d[1]))
ggplot(dat, aes(x=x,y=y)) +
geom_point() +
labs(y="Benefit of " + expression(d[1]))
ggplot(dat, aes(x=x,y=y)) +
geom_point() +
labs(y=expression(paste("Hb", A[1][c]," (%)",sep="")))
ggplot(dat, aes(x=x,y=y)) +
geom_point() +
labs(y=expression(paste("Benefit of triadic closure (b2", b[2],")",sep="")))
ggplot(dat, aes(x=x,y=y)) +
geom_point() +
labs(y=expression(paste("Benefit of triadic closure (", b[2],")",sep="")))
ssData = loadSimulationSummaryData()
p1 <- ggplot(ssData, aes(x = bb.b2))
p1 <- p1 + geom_point(aes(y = net.clustering.av),
size = ssData$bb.c3*2,
alpha = SCATTER_ALPHA,
colour = "blue")
p1 <- p1 + geom_smooth(aes(y = net.clustering.av), se=FALSE)
p1 <- p1 + labs(y = "Average clustering",
x = expression(paste("Benefit of triadic closure (", b[2],")",sep="")))
p1
p1 <- ggplot(ssData, aes(x = bb.b2))
p1 <- p1 + geom_point(aes(y = net.stable),
size = ssData$bb.c3*2,
alpha = SCATTER_ALPHA,
colour = "blue")
p1 <- p1 + geom_smooth(aes(y = net.stable), se=FALSE)
p1 <- p1 + labs(y = "Network stability",
x = expression(paste("Benefit of triadic closure (", b[2],")",sep="")))
p1
source('~/git/uu/nidm/simulation/analysis/burgerbuskens-template.R')
plots <- getPlotRow(ssData, ssData$bb.b2, ssData$bb.c3*2, TRUE)
grid.arrange(plots, ncol=1)
source('~/git/uu/nidm/simulation/analysis/burgerbuskens-template.R')
plots <- getPlotRow(ssData, ssData$bb.b2, ssData$bb.c3*2, TRUE)
grid.arrange(plots, ncol=1)
plots[[1]]
plots[[2]]
plots[[3]]
do.call("grid.arrange", c(plots, ncol=1))
do.call("grid.arrange", c(plots, ncol=3))
source('~/git/uu/nidm/simulation/analysis/burgerbuskens-template.R')
plots3 <- getPlotRow(ssData,
ssData$bb.b2,
expression(paste("Benefit of triadic closure (", b[2],")",sep="")),
ssData$bb.c3*2,
TRUE)
do.call("grid.arrange", c(plots3, ncol=3))
plots3 <- getPlotRow(ssData,
ssData$bb.b1,
expression(paste("Benefit of triadic closure (", b[2],")",sep="")),
1,
TRUE)
plots3 <- c(plots3, getPlotRow(ssData,
ssData$bb.b2,
expression(paste("Benefit of triadic closure (", b[2],")",sep="")),
ssData$bb.c3*2,
TRUE))
do.call("grid.arrange", c(plots3, ncol=3))
plots3 <- getPlotRow(ssData,
ssData$bb.b1,
expression(paste("Benefit of triadic closure (", b[2],")",sep="")),
1,
TRUE)
do.call("grid.arrange", c(plots3, ncol=3))
plots3 <- c(plots3, getPlotRow(ssData,
ssData$bb.b2,
expression(paste("Benefit of triadic closure (", b[2],")",sep="")),
ssData$bb.c3*2,
TRUE))
do.call("grid.arrange", c(plots3, ncol=3))
plots3 <- getPlotRow(ssData,
ssData$bb.b1,
expression(paste("Benefit of social ties (", b[1],")",sep="")),
1,
TRUE)
plots3 <- c(plots3, getPlotRow(ssData,
ssData$bb.b2,
expression(paste("Benefit of triadic closure (", b[2],")",sep="")),
ssData$bb.c3*2,
TRUE))
do.call("grid.arrange", c(plots3, ncol=3))
source('~/git/uu/nidm/simulation/analysis/burgerbuskens-template.R')
source('~/git/uu/nidm/simulation/analysis/burgerbuskens-template.R')
source('~/git/uu/nidm/simulation/data/20190924-112938/burgerbuskens.R')
source('~/git/uu/nidm/simulation/data/20190924-112938/burgerbuskens.R')
exportPlots()
warnings()
source('~/git/uu/nidm/simulation/data/20190924-112938/burgerbuskens.R')
warnings()
exportPlots()
ssData = loadSimulationSummaryData()
View(ssData)
ssData = loadSimulationSummaryData()
source('~/git/uu/nidm/simulation/data/20190924-112938/burgerbuskens.R')
exportPlots()
source('~/git/uu/nidm/simulation/data/20190924-112938/burgerbuskens.R')
exportPlots()
source('~/git/uu/nidm/simulation/data/20190924-112938/burgerbuskens.R')
exportPlots()
source('~/git/uu/nidm/simulation/data/20190924-112938/burgerbuskens.R')
exportPlots()
source('~/git/uu/nidm/simulation/data/20190924-112938/burgerbuskens.R')
exportPlots()
ssData = loadSimulationSummaryData()
ssData$net.stable
source('~/git/uu/nidm/simulation/data/20190924-112938/burgerbuskens.R')
ssData$net.stable
exportPlots()
warnings()
source('~/git/uu/nidm/simulation/data/20190924-134125/burgerbuskens.R')
ssData <- loadSimulationSummaryData()
exportRegressionModels(ssData = ssData)
exportPlots()
source('~/git/uu/nidm/simulation/data/20190924-134125/burgerbuskens.R')
exportPlots()
warnings()
View(ssData)
summary(ssData)
sourceLibs(c("ggplot2",     # plots
"gridExtra",   # side-by-side plots
"QuantPsyc",   # 'meanCenter' function
"lme4",        # regression analyses
"sjstats",     # "icc" function
"texreg",      # html export
"arsenal"      # summary table
))
sourceLibs(c("ggplot2",     # plots
"gridExtra",   # side-by-side plots
"QuantPsyc",   # 'meanCenter' function
"lme4",        # regression analyses
"sjstats",     # "icc" function
"texreg",      # html export
"table1"      # summary table
))
table1::label(ssData$bb.b1) <- "Social benefit (normal)"
table1::label(ssData$bb.b2) <- "Social benefit (triadic closure)"
table1::label(ssData$bb.c1) <- "Social costs (normal)"
table1::table1(~bb.b1 + bb.b2 + bb.c1, data = ssData)
table1::table1(~bb.b1 + bb.b2 + bb.c1 | bb.N, data = ssData)
dummy <- table1::table1(~bb.b1 + bb.b2 + bb.c1 | bb.N, data = ssData)
filepath <- paste(EXPORT_PATH_NUMERIC,
"summary",
EXPORT_FILE_EXTENSION_SUMMARY,
sep = "")
source('~/git/uu/nidm/simulation/data/20190924-134125/burgerbuskens.R')
filepath <- paste(EXPORT_PATH_NUMERIC,
"summary",
EXPORT_FILE_EXTENSION_SUMMARY,
sep = "")
# create directory if necessary
dir.create(EXPORT_PATH_NUMERIC, showWarnings = FALSE)
table1::label(ssData$bb.b1) <- "Social benefit (normal)"
table1::label(ssData$bb.b2) <- "Social benefit (triadic closure)"
table1::label(ssData$bb.c1) <- "Social costs (normal)"
dummy <- table1::table1(~bb.b1 + bb.b2 + bb.c1 | bb.N, data = ssData)
write(dummy, filepath)
write(table1::table1(~
bb.b1 +
bb.b2 +
bb.c1 |
bb.N,
data = ssData,
topclass="Rtable1-zebra"),
filepath)
table1::table1(~
bb.b1 +
bb.b2 +
bb.c1 |
bb.N,
data = ssData,
topclass="Rtable1-zebra")
library(psych)
install.packages("psych")
library(psych)
describe(ssData)
library(pastecs)
install.packages("pastecs")
library(pastecs)
stat.desc(mydata)
stat.desc(ssData)
source('~/git/uu/nidm/simulation/data/20190924-134125/burgerbuskens.R')
filepath <- paste(EXPORT_PATH_NUMERIC,
"summary",
EXPORT_FILE_EXTENSION_SUMMARY,
sep = "")
write(describe(ssData),filepath)
describe(ssData)
describe(ssData)
dummy <- describe(ssData)
View(dummy)
source('~/git/uu/nidm/simulation/data/20190924-134125/burgerbuskens.R')
dummy <- describe(ssData)
filepath <- paste(EXPORT_PATH_NUMERIC,
"summary",
EXPORT_FILE_EXTENSION_SUMMARY,
sep = "")
dummy <- describe(ssData)
write.csv(dummy,filepath)
describeBy(ssData, group = bb.N)
describeBy(ssData, group = ssData$bb.N)
describe(ssData)
source('~/git/uu/nidm/simulation/data/20190924-150847/burgerbuskens.R')
ssData <- loadSimulationSummaryData()
exportSummary(ssData = ssData)
describeBy(ssData, group = ssData$bb.N)
write.csv(describeBy(ssData, group = ssData$bb.N),filepath)
do.call("rbind",(describeBy(ssData, group = ssData$bb.N))
do.call("rbind",(describeBy(ssData, group = ssData$bb.N)))
do.call("rbind",(describeBy(ssData, group = ssData$bb.N)))
write.csv(do.call("rbind",(describeBy(ssData, group = ssData$bb.N))),filepath)
filepath <- paste(EXPORT_PATH_NUMERIC,
"summary",
EXPORT_FILE_EXTENSION_SUMMARY,
sep = "")
write.csv(do.call("rbind",(describeBy(ssData, group = ssData$bb.N))),filepath)
# total
filepathTotal <- paste(EXPORT_PATH_NUMERIC,
"summary",
EXPORT_FILE_EXTENSION_SUMMARY,
sep = "")
write.csv(describe(ssData), filepathTotal)
# grouped by network size
filepathByN <- paste(EXPORT_PATH_NUMERIC,
"summary-by-N",
EXPORT_FILE_EXTENSION_SUMMARY,
sep = "")
write.csv(do.call("rbind",(describeBy(ssData, group = ssData$bb.N))), filepathByN)
